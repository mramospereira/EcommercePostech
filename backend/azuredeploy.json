{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "appName": {
        "type": "string",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "The name of the storage account that you wish to create."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "accountName": {
        "type": "string",
        "defaultValue": "[concat('sql-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Cosmos Account Name"
        }
      },
      "databaseName": {
        "type": "string",
        "defaultValue": "ecommercecomosdb",
        "metadata": {
          "description": "Database name"
        }
      },
      "containers": {
        "type": "array",
        "metadata": {
          "description": "Array of Container Object with name and partition key"
        }
      }
    },
    "variables": {
      "functionAppName": "[parameters('appName')]",
      "hostingPlanName": "[parameters('appName')]",
      "storageAccountName": "[parameters('storageAccountName')]",
      "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
    },
    "resources": [
      {
        "name": "[parameters('accountName')]",
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2019-12-12",
        "location": "[parameters('location')]",
        "kind": "GlobalDocumentDB",
        "properties": {
          "enableFreeTier": true,
          "consistencyPolicy": {
            "defaultConsistencyLevel": "Eventual",
            "maxStalenessPrefix": 1,
            "maxIntervalInSeconds": 5
          },
          "locations": [
            {
              "locationName": "[parameters('location')]",
              "failoverPriority": 0
            }
          ],
          "databaseAccountOfferType": "Standard",
          "enableAutomaticFailover": false
        }
      },

      {
        "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
        "name": "[concat( parameters('accountName'), '/sql/', parameters('databaseName'))]",
        "apiVersion": "2016-03-31",
        "dependsOn": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts/', parameters('accountName'))]"
        ],
        "properties": {
          "resource": {
            "id": "[parameters('databaseName')]"
          },
          "options": {
            "throughput": 400
          }
        }
      },

      {
        "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
        "name": "[concat(parameters('accountName'), '/sql/', parameters('databaseName'), '/', parameters('containers')[copyIndex()].name)]",
        "copy": {
          "name": "ContainerCopy",
          "count": "[length(parameters('containers'))]"
        },
        "apiVersion": "2016-03-31",
        "dependsOn": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', parameters('accountName'), 'sql', parameters('databaseName'))]"
        ],
        "properties": {
          "resource": {
            "id": "[parameters('containers')[copyIndex()].name]",
            "partitionKey": {
              "paths": ["[parameters('containers')[copyIndex()].partitionKey]"],
              "kind": "hash"
            },
            "indexingPolicy": {
              "indexingMode": "consistent"
            }
          }
        }
      },
      // ----- Funciton app
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2016-12-01",
        "location": "[parameters('location')]",
        "kind": "Storage",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2019-08-01",
        "name": "[variables('hostingPlanName')]",
        "kind": "linux",
        "location": "[parameters('location')]",
        
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "workerSize": "0",
          "workerSizeId": "0",
          "numberOfWorkers": "1",
          "reserved": true
        },
        "sku": {
            "Tier": "Dynamic",
            "Name": "Y1"
        }
      },
      {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp,linux",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "connectionStrings": [
              {
                "name": "CosmosDbConnectionString",
                "connectionString": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2019-12-12').connectionStrings[0].connectionString]",
                "type": 3
              }
            ],
            "appSettings": [
              {
                "name": "AzureWebJobsDashboard",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                "value": true
              },
              {
                "name": "ENABLE_ORYX_BUILD",
                "value": true
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "dotnet-isolated"
              },
              {
                "name": "DatabaseName",
                "value": "[parameters('databaseName')]"
              },
              {
                "name": "ContainerName",
                "value": "Products"
              }
            ]
          }
        }
      }
    ]
  }